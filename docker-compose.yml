version: '2'

services:

  tailz:
    image: tailscale/tailscale
    command: ["/bin/sh", "-c", "/tailz/tailnet.sh"]
    depends_on:
      - secretz
    restart: "unless-stopped"
    environment:
      - D_EXTRA_ARGS=--outbound-http-proxy-listen=0.0.0.0:1055
      - STATE=/tailz/tailscale.state
    volumes:
      - tailz:/tailz

  secretz:
    build: .
    restart: "no"
    environment:
      - BALENA_APP_NAME=test
      - BALENA_DEVICE_UUID=test
      - VAULT_API_ADDR=https://secretz.claude.2w.design
      - VAULT_ADDR=https://secretz.claude.2w.design
      - HTTPS_PROXY=http://tailz:1055
      #- https_proxy=http://tailz:1055
      - VAULT_LOG_LEVEL=trace
    cap_add:
      - IPC_LOCK
    volumes:
      - vault:/vault/file
      - secretz:/vault/config
      - tailz:/tailZ
      - proxz:/proxZ
      - secretz:/secretZ
      - code:/codeZ
    labels:
      traefik.enable: true

  proxz:
    image: traefik:2.5
    depends_on:
      - secretz
    restart: "no"
    ports:
      - 80:80 
      - 443:443
    environment:
      - CF_DNS_API_TOKEN_FILE=/etc/traefik/CF_DNS_API_TOKEN
    volumes:
      - proxz:/etc/traefik:ro
      - certz:/etc/certz
    labels:
      io.balena.features.balena-socket: '1'
      traefik.enable: true
      traefik.http.routers.api.service: 'api@internal'

  hass-config:
    image: causticlab/hass-configurator-docker:arm
    restart: "no"
    depends_on:
      - secretz
    environment:
      - HC_BASEPATH=/hass-config
    volumes:
      - hass:/hass-config
    labels:
      traefik.enable: true
      traefik.http.services.hass-config.loadbalancer.server.port: 3218

volumes:
  tailz:
  vault:
  secretz:
    driver_opts:
      type: tmpfs
      device: tmpfs
  certz:
  proxz:
    driver_opts:
      type: tmpfs
      device: tmpfs
  code:
  hass: 

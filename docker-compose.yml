version: '2'

services:

  configz:
    build: .
    restart: always
    environment:
      - VAULT_ADDR=http://secretz:8200
    volumes:
      - oci:/root/.oci
      - logz:/logZ
      - proxz:/proxZ
      - secretz:/secretZ
      - backupz:/backupZ
      - code:/codeZ

  devz:
    image: klutchell/balena-cli:12.38.5
    depends_on:
      - configz
    restart: always
    entrypoint: ["/code/entry.sh", "--foreground", "--log-stdout", "--no-process-group"]
    command: []
    ports:
      - 8200:8200 
      - 139:139
      - 445:445
#    user: 10000:10000
#    labels:
    volumes:
      - code:/code

  proxz:
    image: traefik:2.4
    depends_on:
      - secretz
    restart: always
    ports:
      - 80:80 
      - 443:443
    environment:
      - CF_DNS_API_TOKEN_FILE=/etc/traefik/CF_DNS_API_TOKEN
    volumes:
      - proxz:/etc/traefik:ro
      - certz:/etc/certz
    labels:
      io.balena.features.balena-socket: '1'
      traefik.enable: true
      traefik.http.routers.api.service: 'api@internal'

  logz:
    image: fluent/fluent-bit:1.7
    depends_on:
      - secretz
    restart: always 
    entrypoint: ["/logz/entry.sh"]
    volumes:
      - logz:/logz:ro
    labels:
      io.balena.features.supervisor-api: '1'

  secretz:
    image: vault:1.7.3
    depends_on:
      - configz
    restart: always
    command: ["server"]
    environment:
      - VAULT_ADDR=http://secretz:8200
      - VAULT_API_ADDR=http://secretz:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - oci:/home/vault/.oci:ro
      - vault:/vault/file
      - secretz:/vault/config
    labels:
      traefik.enable: true

  unifi:
    build: ./unifi
    restart: no
#    user: 8000:0
    ports:
      - 8080:8080
      - 3478:3478/udp
      - 10001:10001/udp
      - 6789:6789
      - 5514:5514/udp
    volumes:
      - unifi:/usr/lib/unifi/data
      - unifi-log:/usr/lib/unifi/logs
    labels:
      traefik.enable: true
      traefik.http.services.unifi.loadbalancer.server.port: 8000

  unms:
    image: nico640/docker-unms:1.3.10
    restart: always
    ports:
      - 7443:443
      - 2055:2055/udp
    environment:
      - TZ=Australia/Sydney
      - QUIET_MODE=1
    volumes:
      - unms:/config
    labels:
      traefik.enable: true
      traefik.http.services.unms.loadbalancer.server.port: 443
      traefik.http.services.unms.loadbalancer.server.scheme: https

  backupz:
    image: azinchen/duplicacy:latest
    depends_on:
      - configz
    restart: unless-stopped
    environment:
      - TZ=Australia/Sydney
      - RUN_JOB_IMMEDIATELY=false
      - BACKUP_CRON=0 1 * * *
    volumes:
      - backupz:/config
      - vault:/data/vault
      - unifi:/data/unifi
      - unms:/data/unms

  restore:
    image: saspus/duplicacy-web:latest
    environment:
      - TZ=Australia/Sydney
      - GRP_ID=3875
      - USR_ID=3875
    volumes:
      - restore:/config
    labels:
      traefik.enable: true
      traefik.http.services.restore.loadbalancer.server.port: 3875
  
  hass:
    image: homeassistant/raspberrypi4-homeassistant
    restart: always
    depends_on:
      - configz
    devices:
      - /dev/mem:/dev/mem
    cap_add:
      - SYS_RAWIO
    volumes:
      - hass:/config
    labels:
      traefik.enable: true
      traefik.http.services.hass.loadbalancer.server.port: 8123

  hass-config:
    image: causticlab/hass-configurator-docker:arm
    restart: always
    depends_on:
      - configz
    environment:
      - HC_BASEPATH=/hass-config
    volumes:
      - hass:/hass-config
    labels:
      traefik.enable: true
      traefik.http.services.hass-config.loadbalancer.server.port: 3218

volumes:
  oci:
  vault:
  secretz:
    driver_opts:
      type: tmpfs
      device: tmpfs
  certz:
  proxz:
    driver_opts:
      type: tmpfs
      device: tmpfs
  logz:
    driver_opts:
      type: tmpfs
      device: tmpfs
  unifi:
  unifi-log:
    driver_opts:
      type: tmpfs
      device: tmpfs
  unms:
  homebridge:
  restore:
  backupz:
    driver_opts:
      type: tmpfs
      device: tmpfs
  codex:
  code:
  hass: 

version: '3.8'

services:

  proxz:
    image: traefik:2.9
    ports:
      - target: 443
        published: 443 
        mode: host
      - target: 80
        published: 80 
        mode: host
    environment:
      - TZ=$TZ
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cloudflare_api_token
      - TRAEFIK_API=true
      - TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY=true
      - TRAEFIK_ENTRYPOINTS_http_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_http_HTTP_REDIRECTIONS_ENTRYPOINT_TO=https
      - TRAEFIK_ENTRYPOINTS_https_ADDRESS=:443
      - TRAEFIK_ENTRYPOINTS_https_HTTP_TLS_CERTRESOLVER=letsencrypt
      - TRAEFIK_ENTRYPOINTS_https_HTTP_TLS_DOMAINS_0_MAIN=$domain
      - TRAEFIK_ENTRYPOINTS_https_HTTP_TLS_DOMAINS_0_SANS=*.$domain
      - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_STORAGE=/etc/certz/acme.json
      - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_EMAIL=$email
      - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_DNSCHALLENGE_PROVIDER=cloudflare
      - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_DNSCHALLENGE_RESOLVERS=1.1.1.1:53
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_PROVIDERS_DOCKER_DEFAULTRULE=Host(`{{ `{{ index .Labels "com.docker.swarm.service.name" | splitList "_" | last }}` }}.$domain`)
      - TRAEFIK_PROVIDERS_FILE_FILENAME=/traefik_file_config.yml
    configs:
      - source: traefik_file_config
        target: /traefik_file_config.yml
    secrets: 
      - cloudflare_api_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - certz:/etc/certz
    labels:
      traefik.enable: 'true'
      traefik.http.routers.api.service: 'api@internal'
      
  backup:
    image: azinchen/duplicacy:latest
    environment:
      - TZ=$TZ
      - RUN_JOB_IMMEDIATELY=false
      - BACKUP_CRON=0 1 * * *
      - FILTER_PATTERNS=+uisp/;+uisp/unms/;+uisp/unms/unms-backups/*;+uisp/unms/config-backups/*;-uisp/*;+unifi/;+unifi/backup/*;-unifi/*;-esp/.*
    volumes:
      - backup:/config
      - unifi:/data/unifi
      - uisp:/data/uisp
      - hass:/data/hass
      - esp:/data/esp
      
  restore:
    image: saspus/duplicacy-web:latest
    environment:
      - TZ=$TZ
      - GRP_ID=3875
      - USR_ID=3875
    volumes:
      - restore:/config
    labels:
      traefik.enable: 'true'
      traefik.http.services.restore.loadbalancer.server.port: 3875

  esp:
    image: esphome/esphome:2022.12
    command: ["-q", "dashboard", "/config"]
    environment:
      - TZ=$TZ
      - ESPHOME_DASHBOARD_USE_PING=true
    volumes:
      - esp:/config
    labels:
      traefik.enable: 'true'
      traefik.http.services.esp.loadbalancer.server.port: '6052'

  uisp:
    image: nico640/docker-unms:1.5.7
    ports:
      - target: 2055
        published: 2055
        protocol: 'udp'
        mode: 'host'
    environment:
      - TZ=$TZ
      - QUIET_MODE=1
    volumes:
      - uisp:/config
    labels:
      traefik.enable: 'true'
      traefik.http.services.uisp.loadbalancer.server.port: 443
      traefik.http.services.uisp.loadbalancer.server.scheme: 'https'

  unifi:
    image: jacobalberty/unifi:v7.3
    user: unifi
    ports:
      - target: 3478
        published: 3478
        protocol: 'udp'
        mode: 'host'
      - target: 8080
        published: 8080
        mode: 'host'
    volumes:
      - unifi:/unifi/data
      - unifi-log:/unifi/logs
    labels:
      traefik.enable: 'true'
      traefik.http.services.unifi.loadbalancer.server.port: 8443
      traefik.http.services.unifi.loadbalancer.server.scheme: 'https'

  hass:
    image: homeassistant/raspberrypi4-64-homeassistant:stable
    privileged: true
    devices:
      - /dev/*:/dev/*
    volumes:
      - hass:/config
    labels:
      traefik.enable: 'true'
      traefik.http.services.hass.loadbalancer.server.port: 8123
      
volumes:
  certz:
  backup:
  restore:
  esp:
  uisp:
  unifi:
  unifi-log:
    driver_opts:
      type: tmpfs
      device: tmpfs
  hass: 

configs: 
  traefik_file_config:
    external: true

secrets:
  cloudflare_api_token:
    external: true
